%------------------------------------------------------------------------%
%Nombre: Flores ]Avalos Rodrigo Emmanuel y Vazquez Zuñiga Diana%
%Decodificador Digital 8 bits%
%Grupo 8CV41%
%------------------------------------------------------------------------%
%Cerramos todo y limpiamos variables%
%------------------------------------------------------------------------%
clear all
close all
clc
%------------------------------------------------------------------------%
%Declaramos nuestras variables, pesos y resultados a esperar%
%------------------------------------------------------------------------%

x_1 = 0;
x_2 = 0;
x_3 = 0;
x_4 = 0;
x_5 = 0;
x_6 = 0;
x_7 = 0;
x_8 = 0;

%------------------------------------------------------------------------%
%El valor de los pesos son aleatorios y aproximados%
%------------------------------------------------------------------------%

w_1 = 0.97; % (2)^(0) %
w_2 = 1.94; % (2)^(1) %
w_3 = 3.87; % (2)^(2) %
w_4 = 7.85; % (2)^(3) %
w_5 = 15.66; % (2)^(4) %
w_6 = 31.73; % (2)^(5) %
w_7 = 63.21; % (2)^(6) %
w_8 = 127.59; % (2)^(7) %

x   = [0 0 0 0 0 0 0 0;
       0 0 0 0 0 0 0 1;
       0 0 0 0 0 0 1 0;
       0 0 0 0 0 0 1 1;
       0 0 0 0 0 1 0 0;
       0 0 0 0 0 1 0 1;
       0 0 0 0 0 1 1 0;
       0 0 0 0 0 1 1 1;
       0 0 0 0 1 0 0 0;
       0 0 0 0 1 0 0 1;
       0 0 0 0 1 0 1 0;
       0 0 0 0 1 0 1 1;
       0 0 0 0 1 1 0 0;
       0 0 0 0 1 1 0 1;
       0 0 0 0 1 1 1 0;
       0 0 0 0 1 1 1 1;
       0 0 0 1 0 0 0 0;
       0 0 0 1 0 0 0 1;
       0 0 0 1 0 0 1 0;
       0 0 0 1 0 0 1 1;
       0 0 0 1 0 1 0 0;
       0 0 0 1 0 1 0 1;
       0 0 0 1 0 1 1 0;
       0 0 0 1 0 1 1 1;
       0 0 0 1 1 0 0 0;
       0 0 0 1 1 0 0 1;
       0 0 0 1 1 0 1 0;
       0 0 0 1 1 0 1 1;
       0 0 0 1 1 1 0 0;
       0 0 0 1 1 1 0 1;
       0 0 0 1 1 1 1 0;
       0 0 0 1 1 1 1 1;
       0 0 1 0 0 0 0 0;
       0 0 1 0 0 0 0 1;
       0 0 1 0 0 0 1 0;
       0 0 1 0 0 0 1 1;
       0 0 1 0 0 1 0 0;
       0 0 1 0 0 1 0 1;
       0 0 1 0 0 1 1 0;
       0 0 1 0 0 1 1 1;
       0 0 1 0 1 0 0 0;
       0 0 1 0 1 0 0 1;
       0 0 1 0 1 0 1 0;
       0 0 1 0 1 0 1 1;
       0 0 1 0 1 1 0 0;
       0 0 1 0 1 1 0 1;
       0 0 1 0 1 1 1 0;
       0 0 1 0 1 1 1 1;
       0 0 1 1 0 0 0 0;
       0 0 1 1 0 0 0 1;
       0 0 1 1 0 0 1 0;
       0 0 1 1 0 0 1 1;
       0 0 1 1 0 1 0 0;
       0 0 1 1 0 1 0 1;
       0 0 1 1 0 1 1 0;
       0 0 1 1 0 1 1 1;
       0 0 1 1 1 0 0 0;
       0 0 1 1 1 0 0 1;
       0 0 1 1 1 0 1 0;
       0 0 1 1 1 0 1 1;
       0 0 1 1 1 1 0 0;
       0 0 1 1 1 1 0 1;
       0 0 1 1 1 1 1 0;
       0 0 1 1 1 1 1 1;
       0 1 0 0 0 0 0 0;
       0 1 0 0 0 0 0 1;
       0 1 0 0 0 0 1 0;
       0 1 0 0 0 0 1 1;
       0 1 0 0 0 1 0 0;
       0 1 0 0 0 1 0 1;
       0 1 0 0 0 1 1 0;
       0 1 0 0 0 1 1 1;
       0 1 0 0 1 0 0 0;
       0 1 0 0 1 0 0 1;
       0 1 0 0 1 0 1 0;
       0 1 0 0 1 0 1 1;
       0 1 0 0 1 1 0 0;
       0 1 0 0 1 1 0 1;
       0 1 0 0 1 1 1 0;
       0 1 0 0 1 1 1 1;
       0 1 0 1 0 0 0 0;
       0 1 0 1 0 0 0 1;
       0 1 0 1 0 0 1 0;
       0 1 0 1 0 0 1 1;
       0 1 0 1 0 1 0 0;
       0 1 0 1 0 1 0 1;
       0 1 0 1 0 1 1 0;
       0 1 0 1 0 1 1 1;
       0 1 0 1 1 0 0 0;
       0 1 0 1 1 0 0 1;
       0 1 0 1 1 0 1 0;
       0 1 0 1 1 0 1 1;
       0 1 0 1 1 1 0 0;
       0 1 0 1 1 1 0 1;
       0 1 0 1 1 1 1 0;
       0 1 0 1 1 1 1 1;
       0 1 1 0 0 0 0 0;
       0 1 1 0 0 0 0 1;
       0 1 1 0 0 0 1 0;
       0 1 1 0 0 0 1 1;
       0 1 1 0 0 1 0 0;
       0 1 1 0 0 1 0 1;
       0 1 1 0 0 1 1 0;
       0 1 1 0 0 1 1 1;
       0 1 1 0 1 0 0 0;
       0 1 1 0 1 0 0 1;
       0 1 1 0 1 0 1 0;
       0 1 1 0 1 0 1 1;
       0 1 1 0 1 1 0 0;
       0 1 1 0 1 1 0 1;
       0 1 1 0 1 1 1 0;
       0 1 1 0 1 1 1 1;
       0 1 1 1 0 0 0 0;
       0 1 1 1 0 0 0 1;
       0 1 1 1 0 0 1 0;
       0 1 1 1 0 0 1 1;
       0 1 1 1 0 1 0 0;
       0 1 1 1 0 1 0 1;
       0 1 1 1 0 1 1 0;
       0 1 1 1 0 1 1 1;
       0 1 1 1 1 0 0 0;
       0 1 1 1 1 0 0 1;
       0 1 1 1 1 0 1 0;
       0 1 1 1 1 0 1 1;
       0 1 1 1 1 1 0 0;
       0 1 1 1 1 1 0 1;
       0 1 1 1 1 1 1 0;
       0 1 1 1 1 1 1 1;
       1 0 0 0 0 0 0 0;
       1 0 0 0 0 0 0 1;
       1 0 0 0 0 0 1 0;
       1 0 0 0 0 0 1 1;
       1 0 0 0 0 1 0 0;
       1 0 0 0 0 1 0 1;
       1 0 0 0 0 1 1 0;
       1 0 0 0 0 1 1 1;
       1 0 0 0 1 0 0 0;
       1 0 0 0 1 0 0 1;
       1 0 0 0 1 0 1 0;
       1 0 0 0 1 0 1 1;
       1 0 0 0 1 1 0 0;
       1 0 0 0 1 1 0 1;
       1 0 0 0 1 1 1 0;
       1 0 0 0 1 1 1 1;
       1 0 0 1 0 0 0 0;
       1 0 0 1 0 0 0 1;
       1 0 0 1 0 0 1 0;
       1 0 0 1 0 0 1 1;
       1 0 0 1 0 1 0 0;
       1 0 0 1 0 1 0 1;
       1 0 0 1 0 1 1 0;
       1 0 0 1 0 1 1 1;
       1 0 0 1 1 0 0 0;
       1 0 0 1 1 0 0 1;
       1 0 0 1 1 0 1 0;
       1 0 0 1 1 0 1 1;
       1 0 0 1 1 1 0 0;
       1 0 0 1 1 1 0 1;
       1 0 0 1 1 1 1 0;
       1 0 0 1 1 1 1 1;
       1 0 1 0 0 0 0 0;
       1 0 1 0 0 0 0 1;
       1 0 1 0 0 0 1 0;
       1 0 1 0 0 0 1 1;
       1 0 1 0 0 1 0 0;
       1 0 1 0 0 1 0 1;
       1 0 1 0 0 1 1 0;
       1 0 1 0 0 1 1 1;
       1 0 1 0 1 0 0 0;
       1 0 1 0 1 0 0 1;
       1 0 1 0 1 0 1 0;
       1 0 1 0 1 0 1 1;
       1 0 1 0 1 1 0 0;
       1 0 1 0 1 1 0 1;
       1 0 1 0 1 1 1 0;
       1 0 1 0 1 1 1 1;
       1 0 1 1 0 0 0 0;
       1 0 1 1 0 0 0 1;
       1 0 1 1 0 0 1 0;
       1 0 1 1 0 0 1 1;
       1 0 1 1 0 1 0 0;
       1 0 1 1 0 1 0 1;
       1 0 1 1 0 1 1 0;
       1 0 1 1 0 1 1 1;
       1 0 1 1 1 0 0 0;
       1 0 1 1 1 0 0 1;
       1 0 1 1 1 0 1 0;
       1 0 1 1 1 0 1 1;
       1 0 1 1 1 1 0 0;
       1 0 1 1 1 1 0 1;
       1 0 1 1 1 1 1 0;
       1 0 1 1 1 1 1 1;
       1 1 0 0 0 0 0 0;
       1 1 0 0 0 0 0 1;
       1 1 0 0 0 0 1 0;
       1 1 0 0 0 0 1 1;
       1 1 0 0 0 1 0 0;
       1 1 0 0 0 1 0 1;
       1 1 0 0 0 1 1 0;
       1 1 0 0 0 1 1 1;
       1 1 0 0 1 0 0 0;
       1 1 0 0 1 0 0 1;
       1 1 0 0 1 0 1 0;
       1 1 0 0 1 0 1 1;
       1 1 0 0 1 1 0 0;
       1 1 0 0 1 1 0 1;
       1 1 0 0 1 1 1 0;
       1 1 0 0 1 1 1 1;
       1 1 0 1 0 0 0 0;
       1 1 0 1 0 0 0 1;
       1 1 0 1 0 0 1 0;
       1 1 0 1 0 0 1 1;
       1 1 0 1 0 1 0 0;
       1 1 0 1 0 1 0 1;
       1 1 0 1 0 1 1 0;
       1 1 0 1 0 1 1 1;
       1 1 0 1 1 0 0 0;
       1 1 0 1 1 0 0 1;
       1 1 0 1 1 0 1 0;
       1 1 0 1 1 0 1 1;
       1 1 0 1 1 1 0 0;
       1 1 0 1 1 1 0 1;
       1 1 0 1 1 1 1 0;
       1 1 0 1 1 1 1 1;
       1 1 1 0 0 0 0 0;
       1 1 1 0 0 0 0 1;
       1 1 1 0 0 0 1 0;
       1 1 1 0 0 0 1 1;
       1 1 1 0 0 1 0 0;
       1 1 1 0 0 1 0 1;
       1 1 1 0 0 1 1 0;
       1 1 1 0 0 1 1 1;
       1 1 1 0 1 0 0 0;
       1 1 1 0 1 0 0 1;
       1 1 1 0 1 0 1 0;
       1 1 1 0 1 0 1 1;
       1 1 1 0 1 1 0 0;
       1 1 1 0 1 1 0 1;
       1 1 1 0 1 1 1 0;
       1 1 1 0 1 1 1 1;
       1 1 1 1 0 0 0 0;
       1 1 1 1 0 0 0 1;
       1 1 1 1 0 0 1 0;
       1 1 1 1 0 0 1 1;
       1 1 1 1 0 1 0 0;
       1 1 1 1 0 1 0 1;
       1 1 1 1 0 1 1 0;
       1 1 1 1 0 1 1 1;
       1 1 1 1 1 0 0 0;
       1 1 1 1 1 0 0 1;
       1 1 1 1 1 0 1 0;
       1 1 1 1 1 0 1 1;
       1 1 1 1 1 1 0 0;
       1 1 1 1 1 1 0 1;
       1 1 1 1 1 1 1 0;
       1 1 1 1 1 1 1 1;];
   
%------------------------------------------------------------------------%
%Declaramos nuestras variables, pesos y resultados a esperar%
%------------------------------------------------------------------------%

y = [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 
    11; 12; 13; 14; 15; 16; 17; 18; 19; 20; 
    21; 22; 23; 24; 25; 26; 27; 28; 29; 30; 
    31; 32; 33; 34; 35; 36; 37; 38; 39; 40;
    41; 42; 43; 44; 45; 46; 47; 48; 49; 50;
    51; 52; 53; 54; 55; 56; 57; 58; 59; 60;
    61; 62; 63; 64; 65; 66; 67; 68; 69; 70;
    71; 72; 73; 74; 75; 76; 77; 78; 79; 80;
    81; 82; 83; 84; 85; 86; 87; 88; 89; 90;
    91; 92; 93; 94; 95; 96; 97; 98; 99; 100;
    101; 102; 103; 104; 105; 106; 107; 108; 109; 110;
    111; 112; 113; 114; 115; 116; 117; 118; 119; 120;
    121; 122; 123; 124; 125; 126; 127; 128; 129; 130;
    131; 132; 133; 134; 135; 136; 137; 138; 139; 140;
    141; 142; 143; 144; 145; 146; 147; 148; 149; 150;
    151; 152; 153; 154; 155; 156; 157; 158; 159; 160;
    161; 262; 163; 164; 165; 166; 167; 168; 169; 170;
    171; 272; 173; 174; 175; 176; 177; 178; 179; 180;
    181; 182; 183; 184; 185; 186; 187; 188; 189; 190;
    191; 192; 193; 194; 195; 196; 197; 198; 199; 200;
    201; 202; 203; 204; 205; 206; 207; 208; 209; 210;
    211; 212; 213; 214; 215; 216; 217; 218; 219; 220;
    221; 222; 223; 224; 225; 226; 227; 228; 229; 230;
    231; 232; 233; 234; 235; 236; 237; 238; 239; 240;
    241; 242; 243; 244; 245; 246; 247; 248; 249; 250;
    251; 252; 253; 254; 255;];
%------------------------------------------------------------------------%
%Declaramos el valor de learning rate, los pesos y nuestra x de entrada%
%------------------------------------------------------------------------%
   
lr = 0.01;
x_i = [0 0 0 0 0 0 0 0];
w_i = [0 0 0 0 0 0 0 0];
epocas = 10;
%------------------------------------------------------------------------%
%Le pedimos los datos de entrada al usuario%
%------------------------------------------------------------------------%

x_i(1,1)= input('Ingrese el valor de la entrada x7 ')
x_i(1,2)= input('Ingrese el valor de la entrada x6 ')
x_i(1,3)= input('Ingrese el valor de la entrada x5 ')
x_i(1,4)= input('Ingrese el valor de la entrada x4 ')
x_i(1,5)= input('Ingrese el valor de la entrada x3 ')
x_i(1,6)= input('Ingrese el valor de la entrada x2 ')
x_i(1,7)= input('Ingrese el valor de la entrada x1 ')
x_i(1,8)= input('Ingrese el valor de la entrada x0 ')


%------------------------------------------------------------------------%
%Igualamos los valores de entrada de nuestro arreglo a las x
%independientes%
%------------------------------------------------------------------------%

x_1 = x_i(1,1);
x_2 = x_i(1,2);
x_3 = x_i(1,3);
x_4 = x_i(1,4);
x_5 = x_i(1,5);
x_6 = x_i(1,6);
x_7 = x_i(1,7);
x_8 = x_i(1,8);
%------------------------------------------------------------------------%
%Igualamos los valores de los pesos a una matriz%
%------------------------------------------------------------------------%
w_i(1,1) = w_1;
w_i(1,2) = w_2;
w_i(1,3) = w_3;
w_i(1,4) = w_4;
w_i(1,5) = w_5;
w_i(1,6) = w_6;
w_i(1,7) = w_7;
w_i(1,8) = w_8;

w_i
%-----------------------------------------------------------------%
%calculamos el valor de 'y' predicha%
%-----------------------------------------------------------------%

y_p = (x_1*w_1)+(x_2*w_2)+(x_3*w_3)+(x_4*w_4)+(x_5*w_5)+(x_6*w_6)+(x_6*w_6)+(x_7*w_7)+(x_8*w_8)

%-----------------------------------------------------------------%
%hacemos todo el recorrido, las etapas se definen con respecto al error
%mínimo
%-----------------------------------------------------------------%
for k = 1:2
 for i = 1:size(x,1)
     x(i,:);
     
%-----------------------------------------------------------------%
%calculamos el valor de 'y' acumulada%
%-----------------------------------------------------------------%
     y_a = (x_1*w_1)+(x_2*w_2)+(x_3*w_3)+(x_4*w_4)+(x_5*w_5)+(x_6*w_6)+(x_6*w_6)+(x_7*w_7)+(x_8*w_8);
     
%-----------------------------------------------------------------%
%Hacemos cálculo del error para cada valor deseado%
%-----------------------------------------------------------------%

    err = y(i,1) - y_p;
    
%-----------------------------------------------------------------%
%Hacemos uso de la regla delta%
%-----------------------------------------------------------------%
     rdw1 = lr*err*x_1;
     rdw2 = lr*err*x_2;
     rdw3 = lr*err*x_3;
     rdw4 = lr*err*x_4;
     rdw5 = lr*err*x_5;
     rdw6 = lr*err*x_6;
     rdw7 = lr*err*x_7;
     rdw8 = lr*err*x_8;
     

 end
  pause(.5)
     %-----------------------------------------------------------------%
     %Buscamos el error más pequeño o cercano a 0%
     %-----------------------------------------------------------------%
     if err < 1 && err >= 0
         err
     end
     
     if err >=1 && err <= (-1)
         epocas = epocas+1;
         
         k = 0;
     end
 end
 %-----------------------------------------------------------------%
 %Mostramos el valor de los nuevos pesos%
 %-----------------------------------------------------------------%
w_i(1,1) = w_1+rdw1;
w_i(1,2) = w_2+rdw2;
w_i(1,3) = w_3+rdw3;
w_i(1,4) = w_4+rdw4;
w_i(1,5) = w_5+rdw5;
w_i(1,6) = w_6+rdw6;
w_i(1,7) = w_7+rdw7;
w_i(1,8) = w_8+rdw8;
w_i
epocas
